Classfile /D:/demo/study/src/jvm/Test1.class
  Last modified 2020-8-29; size 404 bytes
  MD5 checksum b4603141be0c46030127b54afa5f1029
  Compiled from "Test1.java"
public class jvm.Test1
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #5.#14         // java/lang/Object."<init>":()V
   #2 = Fieldref           #15.#16        // java/lang/System.out:Ljava/io/PrintStream;
   #3 = Methodref          #17.#18        // java/io/PrintStream.println:(I)V
   #4 = Class              #19            // jvm/Test1
   #5 = Class              #20            // java/lang/Object
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = Utf8               Code
   #9 = Utf8               LineNumberTable
  #10 = Utf8               main
  #11 = Utf8               ([Ljava/lang/String;)V
  #12 = Utf8               SourceFile
  #13 = Utf8               Test1.java
  #14 = NameAndType        #6:#7          // "<init>":()V
  #15 = Class              #21            // java/lang/System
  #16 = NameAndType        #22:#23        // out:Ljava/io/PrintStream;
  #17 = Class              #24            // java/io/PrintStream
  #18 = NameAndType        #25:#26        // println:(I)V
  #19 = Utf8               jvm/Test1
  #20 = Utf8               java/lang/Object
  #21 = Utf8               java/lang/System
  #22 = Utf8               out
  #23 = Utf8               Ljava/io/PrintStream;
  #24 = Utf8               java/io/PrintStream
  #25 = Utf8               println
  #26 = Utf8               (I)V
{
  public jvm.Test1();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 7: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      // stack=2,操作栈的大小为2、locals=4,本地变量表大小,args_size=1参数数
      stack=2, locals=4, args_size=1
         0: iconst_2 //将数字2值压入操作栈,位于栈的最上面
         1: istore_1 //从操作栈弹出一个元素（数字2）,放入到本地变量表下标为1的位置（小标为0的是this）
         2: iconst_5 //将数字5值压入操作操作栈,位于栈的最上面
         3: istore_2 //从操作栈中弹出一个元素（5），放入本地变量表小标为2的位置
         4: iload_2 //将本地变量表中下标为2的位置元素压入操作栈（5）
         5: iload_1 //将本地变量表中下标为1的位置元素压入操作栈（2）
         6: isub //操作栈中的2个数字相减
         7: istore_3 //将相减的结果压入到本地变量表中，位于下标为3的位置
         //通过#2号找到对应的常量，即可找到对应的引用
         8: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        11: iload_3 //将本地变量表中下标为3的位置元素压入到操作栈（3）
         //通过#3号找到对应的常量，即可找到对应的引用，进行方法调用
        12: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
        15: return //返回
      LineNumberTable: //行号的列表
        line 9: 0
        line 10: 2
        line 11: 4
        line 12: 8
        line 13: 15
}
SourceFile: "Test1.java"
